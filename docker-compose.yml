version: '3'
services:
  # TODO: prod deployment
  #  springlab-app:
  #    build:
  #      context: .
  #      dockerfile: Dockerfile
  #    depends_on:
  #      - springlab-db
  #      - springlab-kafka-jms
  #      - redis
  #    ports:
  #      - 8080:8080
  #    volumes:
  #      - /var/springlab-app/log:/app/log
  #    environment:
  #      SPRING_DATASOURCE_URL: jdbc:postgresql://my-demo-db:5432/springlab
  #      SPRING_DATASOURCE_USERNAME: root
  #      SPRING_DATASOURCE_PASSWORD: root
  #      SPRING_KAFKA_BOOTSTRAP_SERVERS: springlab-kafka-jms:9092
  #

  springlab-db:
    image: postgres:latest
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=springlab
    volumes:
      - springlab-db-data:/var/lib/postgresql/data/
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - 5432:5432
    networks:
      - springlab-network
  zookeeper:
    image: 'confluentinc/cp-zookeeper:latest'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  springlab-kafka-jms:
    image: 'confluentinc/cp-kafka:latest'
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - 3000:3000
    volumes:
      - grafana-storage:/var/lib/grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin # Change this to a secure password
    depends_on:
      - prometheus

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.2
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "discovery.type=single-node"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - ./elasticsearch_data:/usr/share/elasticsearch/data

  logstash:
    image: docker.elastic.co/logstash/logstash:7.13.2
    ports:
      - "5000:5000"
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    depends_on:
      - elasticsearch

  kibana:
    image: docker.elastic.co/kibana/kibana:7.13.2
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - XPACK_SECURITY_ENCRYPTIONKEY=your-strong-encryption-key-12345678
      - XPACK_REPORTING_ENCRYPTIONKEY=your-strong-encryption-key-12345678

  postgres-keycloak:
    image: postgres:13.7
    container_name: postgres-keycloak
    volumes:
      - keycloak-db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak_user
      POSTGRES_PASSWORD: Test1234
    networks:
      - keycloak-network

  keycloak:
    build: ./keycloak-auth-service
    container_name: keycloak-auth-service
    environment:
      KC_MODE: dev
      KC_HOSTNAME_STRICT: 'false'
      KC_HOSTNAME_STRICT_HTTPS: 'false'
      KC_HTTP_ENABLED: 'true'
      KC_DB_URL: 'jdbc:postgresql://postgres-keycloak/keycloak'
      KC_DB_USERNAME: keycloak_user
      KC_DB_PASSWORD: Test1234
      KC_HEALTH_ENABLED: 'true'
      KC_METRICS_ENABLED: 'true'
      KC_HOSTNAME: localhost
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: Keycloak1234
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: Keycloak1234
      KEYCLOAK_HTTP_PORT: 8080
      KEYCLOAK_HTTPS_PORT: -1
      PROXY_ADDRESS_FORWARDING: "true"
    command:
      - "-v start --optimized"
    ports:
      - 8082:8080
    depends_on:
      - postgres-keycloak
    networks:
      - keycloak-network

volumes:
  springlab-db-data:
  grafana-storage:
  redis-data:
  es-data:
  keycloak-db-data:
    driver: local

networks:
  springlab-network:
    driver: bridge
  # FIXME: hidden in separate network to avoid conflicts with springlab-db
  keycloak-network:
    driver: bridge